function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "Add"};
	this.sidHashMap["Add"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "Add:13"};
	this.sidHashMap["Add:13"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "Add:18"};
	this.sidHashMap["Add:18"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "Add:11"};
	this.sidHashMap["Add:11"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<Root>/In1"] = {sid: "Add:1"};
	this.sidHashMap["Add:1"] = {rtwname: "<Root>/In1"};
	this.rtwnameHashMap["<Root>/In2"] = {sid: "Add:5"};
	this.sidHashMap["Add:5"] = {rtwname: "<Root>/In2"};
	this.rtwnameHashMap["<Root>/Add"] = {sid: "Add:4"};
	this.sidHashMap["Add:4"] = {rtwname: "<Root>/Add"};
	this.rtwnameHashMap["<Root>/Bit Clear"] = {sid: "Add:13"};
	this.sidHashMap["Add:13"] = {rtwname: "<Root>/Bit Clear"};
	this.rtwnameHashMap["<Root>/Bit Set"] = {sid: "Add:18"};
	this.sidHashMap["Add:18"] = {rtwname: "<Root>/Bit Set"};
	this.rtwnameHashMap["<Root>/Bitwise Operator"] = {sid: "Add:14"};
	this.sidHashMap["Add:14"] = {rtwname: "<Root>/Bitwise Operator"};
	this.rtwnameHashMap["<Root>/Extract Bits"] = {sid: "Add:11"};
	this.sidHashMap["Add:11"] = {rtwname: "<Root>/Extract Bits"};
	this.rtwnameHashMap["<Root>/Max"] = {sid: "Add:8"};
	this.sidHashMap["Add:8"] = {rtwname: "<Root>/Max"};
	this.rtwnameHashMap["<Root>/Min"] = {sid: "Add:7"};
	this.sidHashMap["Add:7"] = {rtwname: "<Root>/Min"};
	this.rtwnameHashMap["<Root>/Out1"] = {sid: "Add:2"};
	this.sidHashMap["Add:2"] = {rtwname: "<Root>/Out1"};
	this.rtwnameHashMap["<Root>/Out2"] = {sid: "Add:9"};
	this.sidHashMap["Add:9"] = {rtwname: "<Root>/Out2"};
	this.rtwnameHashMap["<Root>/Out3"] = {sid: "Add:10"};
	this.sidHashMap["Add:10"] = {rtwname: "<Root>/Out3"};
	this.rtwnameHashMap["<Root>/Out4"] = {sid: "Add:15"};
	this.sidHashMap["Add:15"] = {rtwname: "<Root>/Out4"};
	this.rtwnameHashMap["<Root>/Out5"] = {sid: "Add:16"};
	this.sidHashMap["Add:16"] = {rtwname: "<Root>/Out5"};
	this.rtwnameHashMap["<Root>/Out6"] = {sid: "Add:17"};
	this.sidHashMap["Add:17"] = {rtwname: "<Root>/Out6"};
	this.rtwnameHashMap["<Root>/Out7"] = {sid: "Add:19"};
	this.sidHashMap["Add:19"] = {rtwname: "<Root>/Out7"};
	this.rtwnameHashMap["<S1>/u"] = {sid: "Add:13:1"};
	this.sidHashMap["Add:13:1"] = {rtwname: "<S1>/u"};
	this.rtwnameHashMap["<S1>/FixPt Bitwise Operator3"] = {sid: "Add:13:2"};
	this.sidHashMap["Add:13:2"] = {rtwname: "<S1>/FixPt Bitwise Operator3"};
	this.rtwnameHashMap["<S1>/FixPt Bitwise Operator4"] = {sid: "Add:13:3"};
	this.sidHashMap["Add:13:3"] = {rtwname: "<S1>/FixPt Bitwise Operator4"};
	this.rtwnameHashMap["<S1>/FixPt Bitwise Operator5"] = {sid: "Add:13:4"};
	this.sidHashMap["Add:13:4"] = {rtwname: "<S1>/FixPt Bitwise Operator5"};
	this.rtwnameHashMap["<S1>/y"] = {sid: "Add:13:5"};
	this.sidHashMap["Add:13:5"] = {rtwname: "<S1>/y"};
	this.rtwnameHashMap["<S2>/u"] = {sid: "Add:18:1"};
	this.sidHashMap["Add:18:1"] = {rtwname: "<S2>/u"};
	this.rtwnameHashMap["<S2>/FixPt Bitwise Operator1"] = {sid: "Add:18:2"};
	this.sidHashMap["Add:18:2"] = {rtwname: "<S2>/FixPt Bitwise Operator1"};
	this.rtwnameHashMap["<S2>/y"] = {sid: "Add:18:3"};
	this.sidHashMap["Add:18:3"] = {rtwname: "<S2>/y"};
	this.rtwnameHashMap["<S3>/u"] = {sid: "Add:11:1"};
	this.sidHashMap["Add:11:1"] = {rtwname: "<S3>/u"};
	this.rtwnameHashMap["<S3>/DTProp1"] = {sid: "Add:11:2"};
	this.sidHashMap["Add:11:2"] = {rtwname: "<S3>/DTProp1"};
	this.rtwnameHashMap["<S3>/DTProp2"] = {sid: "Add:11:3"};
	this.sidHashMap["Add:11:3"] = {rtwname: "<S3>/DTProp2"};
	this.rtwnameHashMap["<S3>/Extract Desired Bits"] = {sid: "Add:11:4"};
	this.sidHashMap["Add:11:4"] = {rtwname: "<S3>/Extract Desired Bits"};
	this.rtwnameHashMap["<S3>/Modify Scaling Only"] = {sid: "Add:11:5"};
	this.sidHashMap["Add:11:5"] = {rtwname: "<S3>/Modify Scaling Only"};
	this.rtwnameHashMap["<S3>/y"] = {sid: "Add:11:6"};
	this.sidHashMap["Add:11:6"] = {rtwname: "<S3>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
